{"version":3,"sources":["components/App.module.css","components/Section.js","components/Notification.js","components/Statistics.js","components/FeedbackOptions.js","components/App.js","index.js"],"names":["module","exports","Section","children","title","Notification","message","Statistics","this","props","good","neutral","bad","total","positivePercentage","Component","FeedbackButton","styled","button","FeedbackButtonLi","li","FeedbackOptions","state","totalFeedback","onLeaveFeedback","countPositiveFeedbackPercentage","Object","keys","map","option","key","type","name","onClick","App","handleIncrement","evt","cangedRate","target","setState","prevState","countTotalFeedback","Math","round","className","styles","shell","ReactDOM","render","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,MAAQ,qB,yKCeXC,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC3B,OACE,oCACE,4BAAKA,GACJD,ICQQE,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,oCACE,2BAAIA,KCHWC,E,iLAST,IAAD,EACmDC,KAAKC,MAAvDC,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAAKC,EADrB,EACqBA,MAAOC,EAD5B,EAC4BA,mBACnC,OACE,iCACE,oCAAUJ,GACV,uCAAaC,GACb,mCAASC,GACT,oCAAUC,GACV,iDAAuBC,EAAvB,W,GAjBgCC,a,2SCIxC,IAAMC,EAAiBC,IAAOC,OAAV,KASdC,EAAmBF,IAAOG,GAAV,KAKDC,E,2MASnBC,MAAQ,CACNZ,KAAM,EAAKD,MAAMC,KACjBC,QAAS,EAAKF,MAAME,QACpBC,IAAK,EAAKH,MAAMG,K,wEAER,IAAD,EAKHJ,KAAKC,MAHPc,EAFK,EAELA,cACAC,EAHK,EAGLA,gBACAC,EAJK,EAILA,gCAJK,EAMwBjB,KAAKC,MAA5BC,EAND,EAMCA,KAAMC,EANP,EAMOA,QAASC,EANhB,EAMgBA,IACvB,OACE,oCACE,kBAAC,EAAD,CAASR,MAAM,yBACb,4BACGsB,OAAOC,KAAKnB,KAAKc,OAAOM,KAAI,SAAAC,GAAM,OACjC,kBAACV,EAAD,CAAkBW,IAAKD,GACrB,kBAACb,EAAD,CACEe,KAAK,SACLC,KAAMH,EACNI,QAAST,GAERK,SAOX,kBAAC,EAAD,CAASzB,MAAM,cACZmB,EAAgB,EACf,kBAAC,EAAD,CACEb,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOU,EACPT,mBAAoBW,IAGtB,kBAAC,EAAD,CAAcnB,QAAQ,4B,GAjDWS,a,iBCjBxBmB,E,2MACnBZ,MAAQ,CACNZ,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPuB,gBAAkB,SAAAC,GAChB,IAAMC,EAAaD,EAAIE,OAAON,KAC9B,EAAKO,UAAS,SAAAC,GACZ,OAAO,eACJH,EAAaG,EAAUH,GAAc,O,EAK5CI,mBAAqB,WAAO,IAAD,EACM,EAAKnB,MACpC,OAFyB,EACjBZ,KADiB,EACXC,QADW,EACFC,K,EAIzBa,gCAAkC,WAAO,IAAD,EACP,EAAKH,MAA5BZ,EAD8B,EAC9BA,KAAMC,EADwB,EACxBA,QAASC,EADe,EACfA,IACvB,OAAO8B,KAAKC,MAAc,IAAPjC,GAAeA,EAAOC,EAAUC,K,wEAInD,IAAMW,EAAgBf,KAAKiC,mBAAmBjC,KAAKc,OAC7CG,EAAkCjB,KAAKiB,gCAC3CjB,KAAKc,OAEP,OACE,6BAASsB,UAAWC,IAAOC,OACzB,kBAAC,EAAD,CACEvB,cAAeA,EACfE,gCAAiCA,EACjCf,KAAMF,KAAKc,MAAMZ,KACjBC,QAASH,KAAKc,MAAMX,QACpBC,IAAKJ,KAAKc,MAAMV,IAChBY,gBAAiBhB,KAAK2B,uB,GAvCCpB,aCCjCgC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.2d0e4356.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"shell\":\"App_shell__3QlhT\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ children, title }) => {\r\n  return (\r\n    <>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <>\r\n      <p>{message}</p>\r\n    </>\r\n  );\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Statistics extends Component {\r\n  static propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired,\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad, total, positivePercentage } = this.props;\r\n    return (\r\n      <section>\r\n        <p>Good: {good}</p>\r\n        <p>Neutral: {neutral}</p>\r\n        <p>Bad: {bad}</p>\r\n        <p>Total:{total}</p>\r\n        <p>Positive feedback: {positivePercentage} %</p>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport Section from './Section';\r\nimport Notification from './Notification';\r\nimport Statistics from './Statistics';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackButton = styled.button`\r\n  margin: 5px;\r\n  padding: 2px;\r\n  border-radius: 5px;\r\n\r\n  &::first-letter {\r\n    text-transform: uppercase;\r\n  }\r\n`;\r\nconst FeedbackButtonLi = styled.li`\r\n  list-style: none;\r\n  display: inline;\r\n`;\r\n\r\nexport default class FeedbackOptions extends Component {\r\n  static propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    totalFeedback: PropTypes.number.isRequired,\r\n    countPositiveFeedbackPercentage: PropTypes.number.isRequired,\r\n  };\r\n\r\n  state = {\r\n    good: this.props.good,\r\n    neutral: this.props.neutral,\r\n    bad: this.props.bad,\r\n  };\r\n  render() {\r\n    const {\r\n      totalFeedback,\r\n      onLeaveFeedback,\r\n      countPositiveFeedbackPercentage,\r\n    } = this.props;\r\n    const { good, neutral, bad } = this.props;\r\n    return (\r\n      <>\r\n        <Section title=\"Please leave feedback\">\r\n          <ul>\r\n            {Object.keys(this.state).map(option => (\r\n              <FeedbackButtonLi key={option}>\r\n                <FeedbackButton\r\n                  type=\"button\"\r\n                  name={option}\r\n                  onClick={onLeaveFeedback}\r\n                >\r\n                  {option}\r\n                </FeedbackButton>\r\n              </FeedbackButtonLi>\r\n            ))}\r\n          </ul>\r\n        </Section>\r\n\r\n        <Section title=\"Statistics\">\r\n          {totalFeedback > 0 ? (\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={totalFeedback}\r\n              positivePercentage={countPositiveFeedbackPercentage}\r\n            ></Statistics>\r\n          ) : (\r\n            <Notification message=\"No feedback given\" />\r\n          )}\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport FeedbackOptions from './FeedbackOptions';\nimport styles from './App.module.css';\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleIncrement = evt => {\n    const cangedRate = evt.target.name;\n    this.setState(prevState => {\n      return {\n        [cangedRate]: prevState[cangedRate] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good, neutral, bad } = this.state;\n    return Math.round((good * 100) / (good + neutral + bad));\n  };\n\n  render() {\n    const totalFeedback = this.countTotalFeedback(this.state);\n    const countPositiveFeedbackPercentage = this.countPositiveFeedbackPercentage(\n      this.state,\n    );\n    return (\n      <section className={styles.shell}>\n        <FeedbackOptions\n          totalFeedback={totalFeedback}\n          countPositiveFeedbackPercentage={countPositiveFeedbackPercentage}\n          good={this.state.good}\n          neutral={this.state.neutral}\n          bad={this.state.bad}\n          onLeaveFeedback={this.handleIncrement}\n        ></FeedbackOptions>\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n\n"],"sourceRoot":""}